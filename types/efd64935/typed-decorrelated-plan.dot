digraph G {
    node0 [shape = record, label="Let l0 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get types.public.t2 (u141)\l  types = (integer?, integer?)\l  keys = ()\l"]
    node2 [shape = record, label="Let l1 =\l Join %0 %1\l  implementation = Unimplemented\l  types = (integer?, integer?)\l  keys = ()\l"]
    node3 [shape = record, label="Let l2 =\l Get %2 (l1)\l  types = (integer?, integer?)\l  keys = ()\l Distinct group=(#0, #1)\l  types = (integer?, integer?)\l  keys = ((#0, #1))\l"]
    node4 [shape = record, label="Let l3 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node5 [shape = record, label=" Get types.public.t1 (u139)\l  types = (integer?, integer)\l  keys = ()\l"]
    node6 [shape = record, label="Let l4 =\l Join %4 %5\l  implementation = Unimplemented\l  types = (integer?, integer)\l  keys = ()\l Filter (#0 = 42)\l  types = (integer, integer)\l  keys = ()\l Project (#1)\l  types = (integer)\l  keys = ()\l"]
    node7 [shape = record, label=" Get %6 (l4)\l  types = (integer)\l  keys = ()\l Reduce group=()\l  agg count(true)\l  types = (bigint)\l  keys = (())\l Filter (#0 \> 1)\l  types = (bigint)\l  keys = (())\l Project ()\l  types = ()\l  keys = (())\l Map (err: more than one record produced in subquery)\l  types = (integer)\l  keys = (())\l"]
    node8 [shape = record, label="Let l5 =\l Union %6 %7\l  types = (integer)\l  keys = ()\l"]
    node9 [shape = record, label=" Get %8 (l5)\l  types = (integer)\l  keys = ()\l Distinct group=()\l  types = ()\l  keys = (())\l Negate\l  types = ()\l  keys = ()\l"]
    node10 [shape = record, label=" Get %4 (l3)\l  types = ()\l  keys = (())\l Distinct group=()\l  types = ()\l  keys = (())\l"]
    node11 [shape = record, label=" Union %9 %10\l  types = ()\l  keys = ()\l"]
    node12 [shape = record, label=" Join %11 %4\l  implementation = Unimplemented\l  types = ()\l  keys = ()\l Project ()\l  types = ()\l  keys = ()\l"]
    node13 [shape = record, label=" Constant (null)\l  types = (integer?)\l  keys = (())\l"]
    node14 [shape = record, label=" Join %12 %13\l  implementation = Unimplemented\l  types = (integer?)\l  keys = ()\l"]
    node15 [shape = record, label=" Union %8 %14\l  types = (integer?)\l  keys = ()\l"]
    node16 [shape = record, label=" Join %3 %15\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?)\l  keys = ()\l Project (#0..=#2)\l  types = (integer?, integer?, integer?)\l  keys = ()\l"]
    node17 [shape = record, label=" Join %2 %16 (= #0 #2) (= #1 #3)\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #4\l  types = (integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#0, #1, #5)\l  types = (integer?, integer?, integer?)\l  keys = ()\l Project (#2)\l  types = (integer?)\l  keys = ()\l"]
    node9 -> node11 [label = "%9\l"]
    node1 -> node2 [label = "%1\l"]
    node12 -> node14 [label = "%12\l"]
    node2 -> node3 [label = "%2\l"]
    node10 -> node11 [label = "%10\l"]
    node2 -> node17 [label = "%2\l"]
    node7 -> node8 [label = "%7\l"]
    node16 -> node17 [label = "%16\l"]
    node6 -> node7 [label = "%6\l"]
    node6 -> node8 [label = "%6\l"]
    node11 -> node12 [label = "%11\l"]
    node13 -> node14 [label = "%13\l"]
    node14 -> node15 [label = "%14\l"]
    node15 -> node16 [label = "%15\l"]
    node8 -> node15 [label = "%8\l"]
    node4 -> node10 [label = "%4\l"]
    node8 -> node9 [label = "%8\l"]
    node4 -> node6 [label = "%4\l"]
    node0 -> node2 [label = "%0\l"]
    node4 -> node12 [label = "%4\l"]
    node3 -> node16 [label = "%3\l"]
    node5 -> node6 [label = "%5\l"]
}
