digraph G {
    node0 [shape = record, label="Let l0 =\l Get types.public.t1 (u139)\l  types = (integer?, integer)\l  keys = ()\l Filter (#0 = 42)\l  types = (integer, integer)\l  keys = ()\l Project ()\l  types = ()\l  keys = ()\l Distinct group=()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get types.public.t2 (u141)\l  types = (integer?, integer?)\l  keys = ()\l Project ()\l  types = ()\l  keys = ()\l ArrangeBy ()\l  types = ()\l  keys = ()\l"]
    node2 [shape = record, label=" Get %0 (l0)\l  types = ()\l  keys = (())\l Map true\l  types = (boolean)\l  keys = (())\l"]
    node3 [shape = record, label=" Get %0 (l0)\l  types = ()\l  keys = (())\l Negate\l  types = ()\l  keys = ()\l"]
    node4 [shape = record, label=" Constant ()\l  types = ()\l  keys = (())\l"]
    node5 [shape = record, label=" Union %3 %4\l  types = ()\l  keys = ()\l Map false\l  types = (boolean)\l  keys = ()\l"]
    node6 [shape = record, label=" Union %2 %5\l  types = (boolean)\l  keys = ()\l"]
    node7 [shape = record, label=" Join %1 %6\l  implementation = Differential %6 %1.()\l  types = (boolean)\l  keys = ()\l"]
    node3 -> node5 [label = "%3\l"]
    node1 -> node7 [label = "%1\l"]
    node0 -> node3 [label = "%0\l"]
    node5 -> node6 [label = "%5\l"]
    node2 -> node6 [label = "%2\l"]
    node0 -> node2 [label = "%0\l"]
    node4 -> node5 [label = "%4\l"]
    node6 -> node7 [label = "%6\l"]
}
