digraph G {
    node0 [shape = record, label="Get optimizer_101.public.a (u9)\l- types = (integer?, integer?, integer?)\l- keys = ()\lFilter !(isnull(#0))\l- types = (integer, integer?, integer?)\l- keys = ()\lArrangeBy (#0)\l- types = (integer, integer?, integer?)\l- keys = ()\l"]
    node1 [shape = record, label="Get optimizer_101.public.b (u10)\l- types = (integer?, integer?)\l- keys = ()\lFilter !(isnull(#0)), !(isnull(#1))\l- types = (integer, integer)\l- keys = ()\lArrangeBy (#1)\l- types = (integer, integer)\l- keys = ()\l"]
    node2 [shape = record, label="Get optimizer_101.public.c (u11)\l- types = (integer?)\l- keys = ()\lFilter !(isnull(#0))\l- types = (integer)\l- keys = ()\l"]
    node3 [shape = record, label="Join %0 %1 %2 (= #0 #3) (= #4 #5)\l- implementation = Differential %2 %1.(#1) %0.(#0)\l- types = (integer, integer?, integer?, integer, integer, integer)\l- keys = ()\lProject (#0..=#2, #4)\l- types = (integer, integer?, integer?, integer)\l- keys = ()\l"]
    node4 [shape = record, label="Get optimizer_101.public.c (u11)\l- types = (integer?)\l- keys = ()\l"]
    node5 [shape = record, label="- types = (integer, integer?, integer?, integer)\l- keys = ()\lProject (#3)\l- types = (integer)\l- keys = ()\lDistinct group=(#0)\l- types = (integer)\l- keys = ((#0))\lArrangeBy (#0)\l- types = (integer)\l- keys = ((#0))\l"]
    node6 [shape = record, label="Join %4 %5 (= #0 #1)\l- implementation = Differential %4 %5.(#0)\l- types = (integer?, integer)\l- keys = ()\lProject (#0)\l- types = (integer?)\l- keys = ()\lNegate\l- types = (integer?)\l- keys = ()\l"]
    node7 [shape = record, label="Get optimizer_101.public.c (u11)\l- types = (integer?)\l- keys = ()\l"]
    node8 [shape = record, label="Union %6 %7\l- types = (integer?)\l- keys = ()\lMap null, null, null, null, null\l- types = (integer?, integer?, integer?, integer?, integer?, integer?)\l- keys = ()\lProject (#1..=#5, #0)\l- types = (integer?, integer?, integer?, integer?, integer?, integer?)\l- keys = ()\l"]
    node9 [shape = record, label="- types = (integer, integer?, integer?, integer)\l- keys = ()\lProject (#0..=#2, #0, #3, #3)\l- types = (integer, integer?, integer?, integer, integer, integer)\l- keys = ()\l"]
    node10 [shape = record, label="Union %8 %9\l- types = (integer?, integer?, integer?, integer?, integer?, integer?)\l- keys = ()\l"]
    node0 -> node3 [label = "%0\l"]
    node3 -> node5 [label = "%3\l"]
    node9 -> node10 [label = "%9\l"]
    node3 -> node9 [label = "%3\l"]
    node5 -> node6 [label = "%5\l"]
    node4 -> node6 [label = "%4\l"]
    node2 -> node3 [label = "%2\l"]
    node6 -> node8 [label = "%6\l"]
    node1 -> node3 [label = "%1\l"]
    node7 -> node8 [label = "%7\l"]
    node8 -> node10 [label = "%8\l"]
}
