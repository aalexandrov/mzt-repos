digraph G {
    node0 [shape = record, label="Let l0 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get reduction_pushdown.public.r (u1)\l  types = (integer, integer, integer)\l  keys = ()\l"]
    node2 [shape = record, label="Let l1 =\l Join %0 %1\l  implementation = Unimplemented\l  types = (integer, integer, integer)\l  keys = ()\l"]
    node3 [shape = record, label="Let l2 =\l Get %0 (l0)\l  types = ()\l  keys = (())\l FlatMap wrap1(1)\l  types = (integer)\l  keys = ()\l"]
    node4 [shape = record, label="Let l3 =\l Join %2 %3\l  implementation = Unimplemented\l  types = (integer, integer, integer, integer)\l  keys = ()\l Project (#0..#3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l Filter (#0 = #3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l"]
    node5 [shape = record, label="Let l4 =\l Get %4 (l3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l Project (#0)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node6 [shape = record, label="Let l5 =\l Get %4 (l3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l"]
    node7 [shape = record, label=" Get %6 (l5)\l  types = (integer, integer, integer, integer)\l  keys = ()\l Map (#1 / #2)\l  types = (integer, integer, integer, integer, integer?)\l  keys = ()\l Project (#0..#4)\l  types = (integer, integer, integer, integer, integer?)\l  keys = ()\l Project (#0..#2, #4)\l  types = (integer, integer, integer, integer?)\l  keys = ()\l Distinct group=(#0, #1, #2, #3)\l  types = (integer, integer, integer, integer?)\l  keys = ((#0..#3))\l"]
    node3 -> node4 [label = "%3\l"]
    node0 -> node3 [label = "%0\l"]
    node4 -> node6 [label = "%4\l"]
    node4 -> node5 [label = "%4\l"]
    node0 -> node2 [label = "%0\l"]
    node2 -> node4 [label = "%2\l"]
    node6 -> node7 [label = "%6\l"]
    node1 -> node2 [label = "%1\l"]
}
