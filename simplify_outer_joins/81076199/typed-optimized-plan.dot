digraph G {
    node0 [shape = record, label=" Get simplify_outer_joins.public.l (u95)\l  types = (integer?, integer?)\l  keys = ()\l Filter !(isnull(#1))\l  types = (integer?, integer)\l  keys = ()\l ArrangeBy (#1)\l  types = (integer?, integer)\l  keys = ()\l"]
    node1 [shape = record, label=" Get simplify_outer_joins.public.r (u97)\l  types = (integer?, integer)\l  keys = ()\l Filter !(isnull(#0))\l  types = (integer, integer)\l  keys = ()\l"]
    node2 [shape = record, label=" Join %0 %1 (= #1 #2)\l  implementation = Differential %1 %0.(#1)\l  types = (integer?, integer, integer, integer)\l  keys = ()\l Filter (#0 \< #3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l Project (#0, #1, #1, #3)\l  types = (integer, integer, integer, integer)\l  keys = ()\l"]
    node1 -> node2 [label = "%1\l"]
    node0 -> node2 [label = "%0\l"]
}
