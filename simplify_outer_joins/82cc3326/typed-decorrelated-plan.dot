digraph G {
    node0 [shape = record, label="Let l0 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get simplify_outer_joins.public.table_f1_f2_f3 (u41)\l  types = (integer?, integer?, integer?)\l  keys = ()\l"]
    node2 [shape = record, label=" Join %0 %1\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?)\l  keys = ()\l"]
    node3 [shape = record, label=" Get simplify_outer_joins.public.table_f3_f4_f5 (u43)\l  types = (integer?, integer?, integer?)\l  keys = ()\l"]
    node4 [shape = record, label=" Join %0 %3\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?)\l  keys = ()\l"]
    node5 [shape = record, label=" Get simplify_outer_joins.public.table_f5_f6 (u39)\l  types = (integer?, integer?)\l  keys = ()\l"]
    node6 [shape = record, label=" Join %0 %5\l  implementation = Unimplemented\l  types = (integer?, integer?)\l  keys = ()\l"]
    node7 [shape = record, label=" Join %4 %6\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#0..#4)\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (true && (#2 = #3))\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #0, #1, #2, #3, #4\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#5..#9)\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #3, #0, #1, #2, #4\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#5..#9)\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node8 [shape = record, label=" Join %2 %7\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#0..#7)\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (true && (#2 = #4))\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #0, #1, #2, #3, #4, #5, #6, #7\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#8..#15)\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #2, #0, #1, #3, #4, #5, #6, #7\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#8..#15)\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (true && (#3 = 0))\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #0, #1, #2, #3, #4, #5, #6, #7\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#8..#15)\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Map #0, #1, #2, #3, #4, #5, #6, #7, \"qgm(true)\"\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, text)\l  keys = ()\l Project (#8..#16)\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, text)\l  keys = ()\l Map #8, #0, #1, #2, #3, #5, #7\l  types = (integer?, integer?, integer?, integer?, integer?, integer?, integer?, integer?, text, text, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#9..#15)\l  types = (text, integer?, integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node4 -> node7 [label = "%4\l"]
    node5 -> node6 [label = "%5\l"]
    node0 -> node4 [label = "%0\l"]
    node1 -> node2 [label = "%1\l"]
    node2 -> node8 [label = "%2\l"]
    node6 -> node7 [label = "%6\l"]
    node7 -> node8 [label = "%7\l"]
    node0 -> node6 [label = "%0\l"]
    node0 -> node2 [label = "%0\l"]
    node3 -> node4 [label = "%3\l"]
}
