digraph G {
    node0 [shape = record, label=" Get simplify_outer_joins.public.table_f1_f2_f3 (u41)\l  types = (integer?, integer?, integer?)\l  keys = ()\l Filter !(isnull(#2))\l  types = (integer?, integer?, integer)\l  keys = ()\l ArrangeBy ()\l  types = (integer?, integer?, integer)\l  keys = ()\l"]
    node1 [shape = record, label=" Get simplify_outer_joins.public.table_f3_f4_f5 (u43)\l  types = (integer?, integer?, integer?)\l  keys = ()\l Filter (#2 = 0), !(isnull(#0))\l  types = (integer, integer?, integer)\l  keys = ()\l ArrangeBy (#0)\l  types = (integer, integer?, integer)\l  keys = ()\l"]
    node2 [shape = record, label=" Get simplify_outer_joins.public.table_f5_f6 (u39)\l  types = (integer?, integer?)\l  keys = ()\l Filter (#0 = 0)\l  types = (integer, integer?)\l  keys = ()\l Project (#1)\l  types = (integer?)\l  keys = ()\l"]
    node3 [shape = record, label=" Join %0 %1 %2 (= #2 #3)\l  implementation = Differential %2 %0.() %1.(#0)\l  types = (integer?, integer?, integer, integer, integer?, integer, integer?)\l  keys = ()\l Map \"qgm(false)\"\l  types = (integer?, integer?, integer, integer, integer?, integer, integer?, text)\l  keys = ()\l Project (#7, #2, #0, #1, #5, #4, #6)\l  types = (text, integer, integer?, integer?, integer, integer?, integer?)\l  keys = ()\l"]
    node1 -> node3 [label = "%1\l"]
    node2 -> node3 [label = "%2\l"]
    node0 -> node3 [label = "%0\l"]
}
