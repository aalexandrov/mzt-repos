digraph G {
    node0 [shape = record, label=" Get simplify_outer_joins.public.l (u95)\l  types = (integer?, integer?)\l  keys = ()\l Filter !(isnull(#1))\l  types = (integer?, integer)\l  keys = ()\l ArrangeBy (#1)\l  types = (integer?, integer)\l  keys = ()\l"]
    node1 [shape = record, label=" Get simplify_outer_joins.public.r (u97)\l  types = (integer?, integer)\l  keys = ()\l Filter !(isnull(#0))\l  types = (integer, integer)\l  keys = ()\l"]
    node2 [shape = record, label="Let l0 =\l Join %0 %1 (= #1 #2)\l  implementation = Differential %1 %0.(#1)\l  types = (integer?, integer, integer, integer)\l  keys = ()\l Project (#0, #1, #3)\l  types = (integer?, integer, integer)\l  keys = ()\l"]
    node3 [shape = record, label="Let l1 =\l Get %2 (l0)\l  types = (integer?, integer, integer)\l  keys = ()\l Project (#1)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l ArrangeBy (#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node4 [shape = record, label=" Get simplify_outer_joins.public.r (u97)\l  types = (integer?, integer)\l  keys = ()\l"]
    node5 [shape = record, label=" Join %4 %3 (= #0 #2)\l  implementation = Differential %4 %3.(#0)\l  types = (integer?, integer, integer)\l  keys = ()\l Project (#0, #1)\l  types = (integer?, integer)\l  keys = ()\l Negate\l  types = (integer?, integer)\l  keys = ()\l"]
    node6 [shape = record, label=" Get simplify_outer_joins.public.r (u97)\l  types = (integer?, integer)\l  keys = ()\l"]
    node7 [shape = record, label=" Union %5 %6\l  types = (integer?, integer)\l  keys = ()\l Map null, null\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l Project (#2, #3, #0, #1)\l  types = (integer?, integer?, integer?, integer)\l  keys = ()\l"]
    node8 [shape = record, label=" Get simplify_outer_joins.public.l (u95)\l  types = (integer?, integer?)\l  keys = ()\l"]
    node9 [shape = record, label=" Join %8 %3 (= #1 #2)\l  implementation = Differential %8 %3.(#0)\l  types = (integer?, integer?, integer)\l  keys = ()\l Project (#0, #1)\l  types = (integer?, integer?)\l  keys = ()\l Negate\l  types = (integer?, integer?)\l  keys = ()\l"]
    node10 [shape = record, label=" Get simplify_outer_joins.public.l (u95)\l  types = (integer?, integer?)\l  keys = ()\l"]
    node11 [shape = record, label=" Union %9 %10\l  types = (integer?, integer?)\l  keys = ()\l Map null, null\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node12 [shape = record, label=" Get %2 (l0)\l  types = (integer?, integer, integer)\l  keys = ()\l Project (#0, #1, #1, #2)\l  types = (integer?, integer, integer, integer)\l  keys = ()\l"]
    node13 [shape = record, label="Let l2 =\l Union %7 %11 %12\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node14 [shape = record, label=" Get %13 (l2)\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l Filter !(isnull(#1))\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l"]
    node15 [shape = record, label=" Get simplify_outer_joins.public.t (u99)\l  types = (integer?)\l  keys = ()\l ArrangeBy (#0)\l  types = (integer?)\l  keys = ()\l"]
    node16 [shape = record, label="Let l3 =\l Join %14 %15 (= #1 #4)\l  implementation = Differential %14 %15.(#0)\l  types = (integer?, integer, integer?, integer?, integer?)\l  keys = ()\l Project (#0..=#3)\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l"]
    node17 [shape = record, label="Let l4 =\l Get %13 (l2)\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (#0 \> #3)\l  types = (integer, integer?, integer?, integer)\l  keys = ()\l"]
    node18 [shape = record, label=" Get %16 (l3)\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l Project (#1)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l ArrangeBy (#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node19 [shape = record, label=" Join %17 %18 (= #1 #4)\l  implementation = Differential %17 %18.(#0)\l  types = (integer, integer?, integer?, integer, integer)\l  keys = ()\l Project (#0..=#3)\l  types = (integer, integer?, integer?, integer)\l  keys = ()\l Negate\l  types = (integer, integer?, integer?, integer)\l  keys = ()\l"]
    node20 [shape = record, label=" Union %19 %17\l  types = (integer, integer?, integer?, integer)\l  keys = ()\l Map null\l  types = (integer, integer?, integer?, integer, integer?)\l  keys = ()\l"]
    node21 [shape = record, label=" Get %16 (l3)\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l Filter (#0 \> #3)\l  types = (integer, integer, integer?, integer)\l  keys = ()\l Project (#0..=#3, #1)\l  types = (integer, integer, integer?, integer, integer)\l  keys = ()\l"]
    node22 [shape = record, label=" Union %20 %21\l  types = (integer, integer?, integer?, integer, integer?)\l  keys = ()\l"]
    node2 -> node3 [label = "%2\l"]
    node4 -> node5 [label = "%4\l"]
    node9 -> node11 [label = "%9\l"]
    node12 -> node13 [label = "%12\l"]
    node10 -> node11 [label = "%10\l"]
    node18 -> node19 [label = "%18\l"]
    node15 -> node16 [label = "%15\l"]
    node19 -> node20 [label = "%19\l"]
    node14 -> node16 [label = "%14\l"]
    node17 -> node19 [label = "%17\l"]
    node5 -> node7 [label = "%5\l"]
    node3 -> node9 [label = "%3\l"]
    node8 -> node9 [label = "%8\l"]
    node3 -> node5 [label = "%3\l"]
    node1 -> node2 [label = "%1\l"]
    node20 -> node22 [label = "%20\l"]
    node16 -> node21 [label = "%16\l"]
    node21 -> node22 [label = "%21\l"]
    node2 -> node12 [label = "%2\l"]
    node11 -> node13 [label = "%11\l"]
    node16 -> node18 [label = "%16\l"]
    node0 -> node2 [label = "%0\l"]
    node13 -> node17 [label = "%13\l"]
    node7 -> node13 [label = "%7\l"]
    node6 -> node7 [label = "%6\l"]
    node17 -> node20 [label = "%17\l"]
    node13 -> node14 [label = "%13\l"]
}
