digraph G {
    node0 [shape = record, label="Let l0 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get simplify_outer_joins.public.l (u94)\l  types = (integer?, integer?)\l  keys = ()\l"]
    node2 [shape = record, label="Let l1 =\l Join %0 %1\l  implementation = Unimplemented\l  types = (integer?, integer?)\l  keys = ()\l"]
    node3 [shape = record, label=" Get simplify_outer_joins.public.r (u96)\l  types = (integer?, integer)\l  keys = ()\l"]
    node4 [shape = record, label="Let l2 =\l Join %0 %3\l  implementation = Unimplemented\l  types = (integer?, integer)\l  keys = ()\l"]
    node5 [shape = record, label="Let l3 =\l Join %2 %4\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer)\l  keys = ()\l Project (#0..#3)\l  types = (integer?, integer?, integer?, integer)\l  keys = ()\l Filter (#1 = #2)\l  types = (integer?, integer, integer, integer)\l  keys = ()\l"]
    node6 [shape = record, label="Let l4 =\l Get %5 (l3)\l  types = (integer?, integer, integer, integer)\l  keys = ()\l Project (#1)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node7 [shape = record, label=" Join %4 %6 (= #0 #2)\l  implementation = Unimplemented\l  types = (integer?, integer, integer)\l  keys = ()\l Project (#0, #1)\l  types = (integer?, integer)\l  keys = ()\l Negate\l  types = (integer?, integer)\l  keys = ()\l"]
    node8 [shape = record, label=" Union %7 %4\l  types = (integer?, integer)\l  keys = ()\l Map null, null\l  types = (integer?, integer, integer?, integer?)\l  keys = ()\l Project (#2, #3, #0, #1)\l  types = (integer?, integer?, integer?, integer)\l  keys = ()\l"]
    node9 [shape = record, label=" Join %2 %6 (= #1 #2)\l  implementation = Unimplemented\l  types = (integer?, integer?, integer)\l  keys = ()\l Project (#0, #1)\l  types = (integer?, integer?)\l  keys = ()\l Negate\l  types = (integer?, integer?)\l  keys = ()\l"]
    node10 [shape = record, label=" Union %9 %2\l  types = (integer?, integer?)\l  keys = ()\l Map null, null\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node11 [shape = record, label=" Union %10 %5\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node12 [shape = record, label="Let l5 =\l Union %8 %11\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node13 [shape = record, label=" Get simplify_outer_joins.public.t (u98)\l  types = (integer?)\l  keys = ()\l"]
    node14 [shape = record, label="Let l6 =\l Join %0 %13\l  implementation = Unimplemented\l  types = (integer?)\l  keys = ()\l"]
    node15 [shape = record, label="Let l7 =\l Join %12 %14\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Project (#0..#4)\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (#1 = #4)\l  types = (integer?, integer, integer?, integer?, integer)\l  keys = ()\l"]
    node16 [shape = record, label="Let l8 =\l Get %15 (l7)\l  types = (integer?, integer, integer?, integer?, integer)\l  keys = ()\l Project (#1)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node17 [shape = record, label=" Join %12 %16 (= #1 #4)\l  implementation = Unimplemented\l  types = (integer?, integer?, integer?, integer?, integer)\l  keys = ()\l Project (#0..#3)\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l Negate\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node18 [shape = record, label=" Union %17 %12\l  types = (integer?, integer?, integer?, integer?)\l  keys = ()\l Map null\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l"]
    node19 [shape = record, label="Let l9 =\l Union %18 %15\l  types = (integer?, integer?, integer?, integer?, integer?)\l  keys = ()\l Filter (#0 \> #3)\l  types = (integer, integer?, integer?, integer, integer?)\l  keys = ()\l"]
    node20 [shape = record, label=" Get %19 (l9)\l  types = (integer, integer?, integer?, integer, integer?)\l  keys = ()\l Map \"qgm(false)\"\l  types = (integer, integer?, integer?, integer, integer?, text)\l  keys = ()\l Project (#0..#5)\l  types = (integer, integer?, integer?, integer, integer?, text)\l  keys = ()\l Project (#5, #0..#4)\l  types = (text, integer, integer?, integer?, integer, integer?)\l  keys = ()\l"]
    node2 -> node9 [label = "%2\l"]
    node16 -> node17 [label = "%16\l"]
    node2 -> node5 [label = "%2\l"]
    node10 -> node11 [label = "%10\l"]
    node0 -> node2 [label = "%0\l"]
    node3 -> node4 [label = "%3\l"]
    node14 -> node15 [label = "%14\l"]
    node19 -> node20 [label = "%19\l"]
    node13 -> node14 [label = "%13\l"]
    node12 -> node15 [label = "%12\l"]
    node4 -> node7 [label = "%4\l"]
    node5 -> node11 [label = "%5\l"]
    node9 -> node10 [label = "%9\l"]
    node6 -> node7 [label = "%6\l"]
    node2 -> node10 [label = "%2\l"]
    node0 -> node14 [label = "%0\l"]
    node17 -> node18 [label = "%17\l"]
    node7 -> node8 [label = "%7\l"]
    node12 -> node17 [label = "%12\l"]
    node5 -> node6 [label = "%5\l"]
    node0 -> node4 [label = "%0\l"]
    node11 -> node12 [label = "%11\l"]
    node15 -> node19 [label = "%15\l"]
    node4 -> node5 [label = "%4\l"]
    node18 -> node19 [label = "%18\l"]
    node4 -> node8 [label = "%4\l"]
    node6 -> node9 [label = "%6\l"]
    node15 -> node16 [label = "%15\l"]
    node12 -> node18 [label = "%12\l"]
    node1 -> node2 [label = "%1\l"]
    node8 -> node12 [label = "%8\l"]
}
