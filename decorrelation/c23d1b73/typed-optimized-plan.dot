digraph G {
    node0 [shape = record, label=" Get decorrelation.public.students (u104)\l  types = (integer, text, smallint?)\l  keys = ()\l Project (#0, #1)\l  types = (integer, text)\l  keys = ()\l ArrangeBy (#0)\l  types = (integer, text)\l  keys = ()\l"]
    node1 [shape = record, label=" Get decorrelation.public.test (u112)\l  types = (integer, integer, integer, numeric?)\l  keys = ()\l Project (#0, #1, #3)\l  types = (integer, integer, numeric?)\l  keys = ()\l"]
    node2 [shape = record, label="Let l0 =\l Join %0 %1 (= #0 #2)\l  implementation = Differential %1 %0.(#0)\l  types = (integer, text, integer, integer, numeric?)\l  keys = ()\l Project (#0, #1, #3, #4)\l  types = (integer, text, integer, numeric?)\l  keys = ()\l"]
    node3 [shape = record, label=" Get %2 (l0)\l  types = (integer, text, integer, numeric?)\l  keys = ()\l Filter !(isnull(#3))\l  types = (integer, text, integer, numeric)\l  keys = ()\l"]
    node4 [shape = record, label=" Get %2 (l0)\l  types = (integer, text, integer, numeric?)\l  keys = ()\l Project (#0)\l  types = (integer)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l ArrangeBy (#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node5 [shape = record, label=" Get decorrelation.public.test (u112)\l  types = (integer, integer, integer, numeric?)\l  keys = ()\l Project (#0, #3)\l  types = (integer, numeric?)\l  keys = ()\l"]
    node6 [shape = record, label=" Join %4 %5 (= #0 #1)\l  implementation = Differential %5 %4.(#0)\l  types = (integer, integer, numeric?)\l  keys = ()\l Project (#0, #2)\l  types = (integer, numeric?)\l  keys = ()\l Reduce group=(#0)\l  agg min(#1)\l  types = (integer, numeric?)\l  keys = ((#0))\l Filter !(isnull(#1))\l  types = (integer, numeric)\l  keys = ((#0))\l ArrangeBy (#0, #1)\l  types = (integer, numeric)\l  keys = ((#0))\l"]
    node7 [shape = record, label=" Join %3 %6 (= #0 #4) (= #3 #5)\l  implementation = Differential %3 %6.(#0, #1)\l  types = (integer, text, integer, numeric, integer, numeric)\l  keys = ()\l Project (#1, #2)\l  types = (text, integer)\l  keys = ()\l"]
    node4 -> node6 [label = "%4\l"]
    node6 -> node7 [label = "%6\l"]
    node2 -> node3 [label = "%2\l"]
    node3 -> node7 [label = "%3\l"]
    node0 -> node2 [label = "%0\l"]
    node1 -> node2 [label = "%1\l"]
    node2 -> node4 [label = "%2\l"]
    node5 -> node6 [label = "%5\l"]
}
