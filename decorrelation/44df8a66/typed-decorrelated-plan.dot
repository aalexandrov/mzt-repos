digraph G {
    node0 [shape = record, label="Let l0 =\l Constant ()\l  types = ()\l  keys = (())\l"]
    node1 [shape = record, label=" Get decorrelation.public.students (u104)\l  types = (integer, text, smallint?)\l  keys = ()\l"]
    node2 [shape = record, label="Let l1 =\l Join %0 %1\l  implementation = Unimplemented\l  types = (integer, text, smallint?)\l  keys = ()\l Filter true\l  types = (integer, text, smallint?)\l  keys = ()\l"]
    node3 [shape = record, label="Let l2 =\l Get %2 (l1)\l  types = (integer, text, smallint?)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node4 [shape = record, label=" Get decorrelation.public.test (u112)\l  types = (integer, integer, integer, numeric?)\l  keys = ()\l"]
    node5 [shape = record, label=" Join %3 %4\l  implementation = Unimplemented\l  types = (integer, integer, integer, integer, numeric?)\l  keys = ()\l Filter (#0 = #1)\l  types = (integer, integer, integer, integer, numeric?)\l  keys = ()\l Project (#0, #4)\l  types = (integer, numeric?)\l  keys = ()\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node6 [shape = record, label=" Constant (true)\l  types = (boolean)\l  keys = (())\l"]
    node7 [shape = record, label="Let l3 =\l Join %5 %6\l  implementation = Unimplemented\l  types = (integer, boolean)\l  keys = ((#0))\l"]
    node8 [shape = record, label=" Get %7 (l3)\l  types = (integer, boolean)\l  keys = ((#0))\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l Negate\l  types = (integer)\l  keys = ()\l"]
    node9 [shape = record, label=" Get %3 (l2)\l  types = (integer)\l  keys = ((#0))\l Distinct group=(#0)\l  types = (integer)\l  keys = ((#0))\l"]
    node10 [shape = record, label=" Union %8 %9\l  types = (integer)\l  keys = ()\l"]
    node11 [shape = record, label=" Join %10 %3 (= #0 #1)\l  implementation = Unimplemented\l  types = (integer, integer)\l  keys = ()\l Project (#0)\l  types = (integer)\l  keys = ()\l"]
    node12 [shape = record, label=" Constant (false)\l  types = (boolean)\l  keys = (())\l"]
    node13 [shape = record, label=" Join %11 %12\l  implementation = Unimplemented\l  types = (integer, boolean)\l  keys = ()\l"]
    node14 [shape = record, label=" Union %7 %13\l  types = (integer, boolean)\l  keys = ()\l"]
    node15 [shape = record, label=" Join %2 %14 (= #0 #3)\l  implementation = Unimplemented\l  types = (integer, text, smallint?, integer, boolean)\l  keys = ()\l Project (#0..#2, #4)\l  types = (integer, text, smallint?, boolean)\l  keys = ()\l Filter #3\l  types = (integer, text, smallint?, boolean)\l  keys = ()\l Project (#0..#2)\l  types = (integer, text, smallint?)\l  keys = ()\l Project (#1)\l  types = (text)\l  keys = ()\l"]
    node9 -> node10 [label = "%9\l"]
    node3 -> node5 [label = "%3\l"]
    node0 -> node2 [label = "%0\l"]
    node3 -> node9 [label = "%3\l"]
    node14 -> node15 [label = "%14\l"]
    node12 -> node13 [label = "%12\l"]
    node11 -> node13 [label = "%11\l"]
    node8 -> node10 [label = "%8\l"]
    node2 -> node15 [label = "%2\l"]
    node2 -> node3 [label = "%2\l"]
    node10 -> node11 [label = "%10\l"]
    node6 -> node7 [label = "%6\l"]
    node4 -> node5 [label = "%4\l"]
    node3 -> node11 [label = "%3\l"]
    node5 -> node7 [label = "%5\l"]
    node7 -> node14 [label = "%7\l"]
    node13 -> node14 [label = "%13\l"]
    node1 -> node2 [label = "%1\l"]
    node7 -> node8 [label = "%7\l"]
}
